# 주민번호나 은행계좌번호처럼 사용자가 부주의 하게 잘못 썼거나 
# 혹은 나쁘게 이용되었을 경우 심각한 문제가 생기는 것을 막기위해 
# 보통 이런 정보들은 체크섬 알고리즘이라는 것을 사용한다. 
# 체크섬 알고리즘은 각 데이타들을 서로 더하거나 빼거나 곱해서 
# 마지막에 나오는 숫자를 원래의 주민번호와 계좌번호 
# 마지막 자리에 덧붙여서 데이타 입력시 똑같은 연산을 수행했을 경우에 
# 마지막 숫자와 일치하는지를 확인하여 오류 여부를 검출하는 알고리즘이다. 
# 주민등록번호인 경우에는 다음과 같은 알고리즘을 사용합니다.

# 1. 주민등록번호 마지막자리수만 제외하고, 
# 각각의 자리수마다 다음과 같은 수를 곱하여 전체를 더한다.
# 주민번호 : 6 4 0 7 1 3  1 0 1 8 4 3 3
# x x x x x x x x x x x x
# 2 3 4 5 6 7 8 9 2 3 4 5
# (6*2)+(4*3)+(0*4)+(7*5)+(1*6)+(3*7)+(1*8)+(0*9)+(1*2)
# +(8*3)+(4*4)+(3*5) = 151

# 2. 1의 값에 매직숫자인 11로 나누어 나머지를 구한다.
# 151 / 11 = 몫: 13 <-- 버림
# 나머지: 8

# 3. 매직숫자인 11에서 나머지를 뺀다.
# 11 – 8 = 3

# 4. 3의 결과로 나온 숫자가 주민등록번호 마지막 자리의 숫자와 일치하면 유효한 주민등록번호이다.
# 11 - 8 = 3 --> 정상적인 주민등록번호임
# print ( isJiminCheck("6407131018433") )
#"6407131018433"  '6'-6
# 0  48
# 1  49
# 2  50
# 3  51
# 4  52
# 5  53 
# 6  54  - 48 = 6
# 7
# 8
# 9
# 2 * ('6'-'0')  ==> ord(jumin[0])-ord('0') ==> 54 - 48 => 6 * 2

def isJuminCheck(jumin):
    checkNum = [2,3,4,5,6,7,8,9,2,3,4,5]
    sum = 0 
    for i in range(0, len(jumin)-1):
        temp = checkNum[i] * (ord(jumin[i])-ord('0'))
        sum += temp 
    #print(sum)
    nmg = sum%11
    #print(nmg)
    checkNum = 11 - nmg 
    #print(checkNum)
    if checkNum == ord(jumin[12])-ord('0'):
        return True 
    return False 
    
print ( isJuminCheck("6407131018433") )
